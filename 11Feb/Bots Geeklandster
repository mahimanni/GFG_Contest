class Solution{
    public boolean prime(int n)
    {
        for(int i=2;i<=n/2;i++)
        {
            if(n%i==0)
             return false;
        }
        return true;
    }
    public int[] findBots(String usernames[], int n){
        String word;
        int count=0;
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            word=usernames[i];
            HashSet<Character> set=new HashSet<>();
            count=0;
            for(int j=0;j<word.length();j+=2)
            {
                if(!set.contains(word.charAt(j)))
                {
                    set.add(word.charAt(j));
                    count+=1;
                }    
            }
            if(count!=1 && prime(count)==true)
              a[i]=1;
            else
              a[i]=0;
        }
        return a;
    }
}


//method-2
class Solution{
    public int[] findBots(String usernames[], int n){
        String word;
        int count=0;
        int a[]=new int[n];
        
        //1<=usernames[i]<=20 and count of distinct chars at even pos are to be seen 
        // and this count is to be checked so 10 prime no
        int primes[]={0,1,1,0,1,0,1,0,0,0};//1,2,3,4,5,6,7,8,9,10
        
        for(int i=0;i<n;i++)
        {
            word=usernames[i];
            HashSet<Character> set=new HashSet<>();
            count=0;
            for(int j=0;j<word.length();j+=2)
            {
                if(!set.contains(word.charAt(j)))
                {
                    set.add(word.charAt(j));
                    count+=1;
                }    
            }
            if(primes[count-1]==1)//0 based indexing of primes array
              a[i]=1;
            else
              a[i]=0;
        }
        return a;
    }
}
